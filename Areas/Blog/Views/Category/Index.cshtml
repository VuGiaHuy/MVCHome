@model IEnumerable<App.Models.Blog.Category>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
       await RenderHtml(item,0);
}
    </tbody>
</table>

@{
    async Task RenderHtml(Category item,int level)
    {
        string prefix = string.Concat(Enumerable.Repeat("&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp",level));
         <tr>
            @if(level==0)
            {
                <td>
                    @Html.Raw(prefix)<a asp-action="Edit" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>   
                </td>
            }
            else
            {
                <td>
                    @Html.Raw(prefix)<ion-icon size="large" style="color:rgb(60, 75, 236);"name="return-down-forward-outline"></ion-icon> <a asp-action="Edit" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>   
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.Slug)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        if(item.CategoryChildren?.Count >0)
        {
            foreach(Category children in item.CategoryChildren)
            {
                await RenderHtml(children,level+1);
            }
        }
    }
}
